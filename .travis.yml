# Control file for continuous integration testing at http://travis-ci.org/

language: c

matrix:
  include:
    # An optimised build with address, leak and undefined behavior checking
    - os: linux
      compiler: clang
      sudo: required
      env: CFLAGS="-fsanitize=address" LDFLAGS="-fsanitize=address"
    - os: linux
      compiler: gcc-8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
      env:
        - CC=gcc-8
        - AR=gcc-ar-8
    # An unoptimised C99 build, for detecting non-static inline functions
    - os: linux
      compiler: gcc-8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
      env:
        - CC=gcc-8
        - AR=gcc-ar-8
        - CFLAGS="-std=gnu99 -O0"
    - os: osx
      compiler: clang
    - os: linux
      compiler: gcc

env:
  global:
    - HTSDIR=./htslib

# For linux systems
addons:
  apt:
    packages:
    - liblzma-dev
    - libbz2-dev

# For MacOSX systems
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then HOMEBREW_NO_AUTO_UPDATE=1 brew install xz || ( brew update && brew install xz ); fi

before_script:
  # Clone htslib, trying the same branch name in the owners' copy of htslib.
  # If this exists then the user is likely making a joint PR to htslib and
  # samtools and we want to validate this PR works in the context of their
  # htslib.  If not, then we need to test this PR against the upstream
  # develop htslib as this is what we'll be linking against once merged.
  # Logic for choosing which to use is in the .travis/clone script.
  - .travis/clone "git://github.com/$(dirname $TRAVIS_REPO_SLUG)/htslib.git" "$HTSDIR" "$TRAVIS_BRANCH"

script: autoreconf -i && (./configure || (cat config.log; /bin/false)) && make -e && make -e test
